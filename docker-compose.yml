version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: lyricnote-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: lyricnote
      POSTGRES_USER: lyricnote
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - lyricnote-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lyricnote -d lyricnote"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: lyricnote-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-your_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - lyricnote-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # LyricNote 后端服务
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: lyricnote-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://lyricnote:${POSTGRES_PASSWORD:-your_secure_password}@postgres:5432/lyricnote
      REDIS_URL: redis://:${REDIS_PASSWORD:-your_redis_password}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your_nextauth_secret}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      ALIYUN_OSS_ACCESS_KEY_ID: ${ALIYUN_OSS_ACCESS_KEY_ID}
      ALIYUN_OSS_ACCESS_KEY_SECRET: ${ALIYUN_OSS_ACCESS_KEY_SECRET}
      ALIYUN_OSS_BUCKET: ${ALIYUN_OSS_BUCKET}
      ALIYUN_OSS_REGION: ${ALIYUN_OSS_REGION}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lyricnote-network
    volumes:
      - backend_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: lyricnote-nginx
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
    networks:
      - lyricnote-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  lyricnote-network:
    driver: bridge
