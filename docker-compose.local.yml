# LyricNote 本地开发环境数据库配置

services:
  # PostgreSQL 本地数据库
  postgres-local:
    image: postgres:15-alpine
    container_name: lyricnote-postgres-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: lyricnote_dev
      POSTGRES_USER: lyricnote_dev
      POSTGRES_PASSWORD: dev_password_123
    volumes:
      - postgres_local_data:/var/lib/postgresql/data
      - ./database/local/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"  # 本地端口5433，避免与系统PostgreSQL冲突
    networks:
      - lyricnote-local-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lyricnote_dev -d lyricnote_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 本地缓存
  redis-local:
    image: redis:7-alpine
    container_name: lyricnote-redis-local
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass dev_redis_123
    volumes:
      - redis_local_data:/data
    ports:
      - "6380:6379"  # 本地端口6380
    networks:
      - lyricnote-local-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "dev_redis_123", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # pgAdmin4 数据库管理工具
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: lyricnote-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@lyricnote.local
      PGADMIN_DEFAULT_PASSWORD: admin123456
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - lyricnote-local-network
    depends_on:
      postgres-local:
        condition: service_healthy

volumes:
  postgres_local_data:
    driver: local
  redis_local_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  lyricnote-local-network:
    driver: bridge
